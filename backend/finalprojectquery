-- ROLES
CREATE TABLE tblRoles (
    RoleID TEXT PRIMARY KEY, -- UUID
    strRoleName TEXT NOT NULL
);

-- USERS
CREATE TABLE tblUsers (
    UserID TEXT PRIMARY KEY, -- UUID
    strUsername TEXT NOT NULL UNIQUE,
    strPassword TEXT NOT NULL,
    strName TEXT,
    strPhone TEXT,
    strTeams TEXT,
    strDiscord TEXT,
    RoleID TEXT,
    FOREIGN KEY (RoleID) REFERENCES tblRoles(RoleID)
);

-- CLASSES
CREATE TABLE tblClasses (
    ClassID TEXT PRIMARY KEY, -- UUID
    strClassName TEXT NOT NULL,
    strDescription TEXT,
    StartDate DATE,
    EndDate DATE,
    IsActive INTEGER
);

-- SESSIONS
CREATE TABLE tblSessions (
    SessionID TEXT PRIMARY KEY, -- UUID
    UserID TEXT,
    Start DATE,
    End DATE,
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID)
);

-- SURVEYS
CREATE TABLE tblSurvey (
    SurveyID TEXT PRIMARY KEY, -- UUID
    strName TEXT,
    ClassID TEXT,
    Due DATE,
    FOREIGN KEY (ClassID) REFERENCES tblClasses(ClassID)
);

-- SURVEY QUESTIONS
CREATE TABLE tblSurveyQuestions (
    QuestionID TEXT PRIMARY KEY, -- UUID
    SurveyID TEXT,
    strQuestion TEXT,
    strType TEXT,
    FOREIGN KEY (SurveyID) REFERENCES tblSurvey(SurveyID)
);

-- POSSIBLE ANSWERS
CREATE TABLE tblAnswers (
    AnswerID TEXT PRIMARY KEY, -- UUID
    strAnswer TEXT,
    QuestionID TEXT,
    FOREIGN KEY (QuestionID) REFERENCES tblSurveyQuestions(QuestionID)
);

-- STUDENT ANSWERS
CREATE TABLE tblStuAnswers (
    ID TEXT PRIMARY KEY, -- UUID
    UserID TEXT,
    AnswerID TEXT,
    strContents TEXT,
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID),
    FOREIGN KEY (AnswerID) REFERENCES tblAnswers(AnswerID)
);

-- GROUPS
CREATE TABLE tblGroups (
    GroupID TEXT PRIMARY KEY, -- UUID
    ClassID TEXT,
    intMax INTEGER,
    FOREIGN KEY (ClassID) REFERENCES tblClasses(ClassID)
);

-- STUDENT GROUP RELATION
CREATE TABLE tblStuGroup (
    stuGroupID TEXT PRIMARY KEY, -- UUID
    UserID TEXT,
    GroupID TEXT,
    IsActive INTEGER,
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID),
    FOREIGN KEY (GroupID) REFERENCES tblGroups(GroupID)
);

-- STUDENT-CLASS RELATION
CREATE TABLE tblStuClass (
    stuClassID TEXT PRIMARY KEY, -- UUID
    UserID TEXT,
    ClassID TEXT,
    strInstructor TEXT,
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID),
    FOREIGN KEY (ClassID) REFERENCES tblClasses(ClassID)
);
